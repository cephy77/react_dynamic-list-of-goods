{"version":3,"sources":["components/GoodsList/GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","memo","goods","className","map","good","classNames","color","name","id","getAll","fetch","then","response","json","get5First","sort","a","b","localeCompare","sortedGoods","slice","getRedGoods","filter","product","App","useState","setGoods","isFetchError","setIsFetchError","passedGoods","useMemo","handleClick","event","fetchFunction","target","getAttribute","catch","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"kRASaA,EAA6BC,gBAAK,gBAAGC,EAAH,EAAGA,MAAH,OAC7C,oBAAIC,UAAU,YAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRF,UAAWG,IAAW,qBAAD,6CACKD,EAAKE,QAAU,IAJ3C,SAOGF,EAAKG,MANDH,EAAKI,YCRX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAV,GAAK,OAAIA,EAAMc,MAAK,SAACC,EAAGC,GAAJ,OACxBD,EAAET,KAAKW,cAAcD,EAAEV,YAExBI,MAAK,SAAAQ,GAAW,OAAIA,EAAYC,MAAM,EAAG,OAGjCC,EAAc,WACzB,OAAOZ,IACJE,MAAK,SAAAV,GAAK,OAAIA,EAAMqB,QAAO,SAAAC,GAAO,MACf,QAAlBA,EAAQjB,aCdDkB,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOxB,EAAP,KAAcyB,EAAd,KACA,EAAwCD,oBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAEMC,EAAcC,mBAAQ,kBAAO7B,IAAQ,CAACA,IAEtC8B,EAAc,SAACC,GACnB,IAEIC,EAEJ,OAJeD,EAAME,OACKC,aAAa,YAIrC,QACA,IAAK,aACHF,EAAgBxB,EAChB,MACF,IAAK,oBACHwB,EAAgBnB,EAChB,MACF,IAAK,aACHmB,EAAgBZ,EAIhBM,GACFC,GAAgB,GAGlBK,IACGtB,MAAK,SAAAC,GAAQ,OAAIc,EAASd,MAC1BwB,OAAM,WACLR,GAAgB,GAChBF,EAAS,QAIf,OACE,sBAAKxB,UAAU,MAAf,UACE,oBAAIA,UAAU,eAAd,mCAEA,sBAAKA,UAAU,oBAAf,UACE,wBACEmC,KAAK,SACLnC,UAAU,cACV,UAAQ,aACRoC,QAASP,EAJX,4BASA,wBACEM,KAAK,SACLnC,UAAU,cACV,UAAQ,oBACRoC,QAASP,EAJX,gCASA,wBACEM,KAAK,SACLnC,UAAU,cACV,UAAQ,aACRoC,QAASP,EAJX,+BAUDJ,GACC,mBAAGzB,UAAU,aAAb,gCAGF,cAAC,EAAD,CAAWD,MAAO4B,QC7ExBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.23424d4f.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport './GoodsList.scss';\nimport classNames from 'classnames';\nimport { Good } from '../../types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = memo(({ goods }) => (\n  <ul className=\"GoodsList\">\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        className={classNames('GoodsList__element', {\n          [`GoodsList__element--${good.color}`]: true,\n        })}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n));\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods.sort((a, b) => (\n      a.name.localeCompare(b.name)\n    )))\n    .then(sortedGoods => sortedGoods.slice(0, 5)); // sort and get the first 5\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(product => (\n      product.color === 'red'\n    ))); // get only red\n};\n","import React, { useMemo, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList/GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isFetchError, setIsFetchError] = useState(false);\n\n  const passedGoods = useMemo(() => (goods), [goods]);\n\n  const handleClick = (event: React.MouseEvent) => {\n    const button = event.target as HTMLElement;\n    const buttonType = button.getAttribute('data-cy');\n    let fetchFunction;\n\n    switch (buttonType) {\n      default:\n      case 'all-button':\n        fetchFunction = getAll;\n        break;\n      case 'first-five-button':\n        fetchFunction = get5First;\n        break;\n      case 'red-button':\n        fetchFunction = getRedGoods;\n        break;\n    }\n\n    if (isFetchError) {\n      setIsFetchError(false);\n    }\n\n    fetchFunction()\n      .then(response => setGoods(response))\n      .catch(() => {\n        setIsFetchError(true);\n        setGoods([]);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__heading\">Dynamic list of Goods</h1>\n\n      <div className=\"App__buttonsGroup\">\n        <button\n          type=\"button\"\n          className=\"App__button\"\n          data-cy=\"all-button\"\n          onClick={handleClick}\n        >\n          Load all goods\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"App__button\"\n          data-cy=\"first-five-button\"\n          onClick={handleClick}\n        >\n          Load 5 first goods\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"App__button\"\n          data-cy=\"red-button\"\n          onClick={handleClick}\n        >\n          Load red goods\n        </button>\n      </div>\n\n      {isFetchError && (\n        <p className=\"App__error\">Fetch error occurs</p>\n      )}\n\n      <GoodsList goods={passedGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}